version: '3.8'

services:
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    depends_on:
      - api
    volumes:
      - ./frontend:/app
      - /app/node_modules
    restart: unless-stopped
    networks:
      - commerce-network

  api:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    depends_on:
      - postgres
      - redis
      - rabbitmq
    env_file:
      - .env
    volumes:
      - ./src:/app/src
    restart: unless-stopped
    networks:
      - commerce-network

  postgres:
    image: postgres:15
    environment:
      POSTGRES_USER: ${DB_USER:-postgres}
      POSTGRES_PASSWORD: ${DB_PASSWORD:-password}
      POSTGRES_DB: ${DB_NAME:-commerceai}
    ports:
      - "5432:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
    networks:
      - commerce-network

  redis:
    image: redis:7
    ports:
      - "6379:6379"
    command: redis-server --requirepass ${REDIS_PASSWORD:-}
    volumes:
      - redis-data:/data
    networks:
      - commerce-network

  rabbitmq:
    image: rabbitmq:3-management
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      RABBITMQ_DEFAULT_USER: ${RABBITMQ_USER:-guest}
      RABBITMQ_DEFAULT_PASS: ${RABBITMQ_PASSWORD:-guest}
      RABBITMQ_DEFAULT_VHOST: ${RABBITMQ_VHOST:-/}
    volumes:
      - rabbitmq-data:/var/lib/rabbitmq
    networks:
      - commerce-network

  worker:
    build:
      context: .
      dockerfile: Dockerfile
    command: celery -A src.core.celery_app worker --loglevel=info
    depends_on:
      - api
      - rabbitmq
    env_file:
      - .env
    volumes:
      - ./src:/app/src
    restart: unless-stopped
    networks:
      - commerce-network

  flower:
    build:
      context: .
      dockerfile: Dockerfile
    command: celery -A src.core.celery_app flower --port=5555
    ports:
      - "5555:5555"
    depends_on:
      - worker
      - rabbitmq
    env_file:
      - .env
    restart: unless-stopped
    networks:
      - commerce-network

networks:
  commerce-network:
    driver: bridge

volumes:
  postgres-data:
  redis-data:
  rabbitmq-data:
